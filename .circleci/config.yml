version: 2

jobs:
  preview:
    docker:
      - image: 937369328181.dkr.ecr.us-east-1.amazonaws.com/density/baseimage-node-12:trunk
    resource_class: small
    steps:
      - checkout
      - run:
          name: "Print out versions"
          command: |
            echo "node -v = $(node -v)"
            echo "npm -v = $(npm -v)"
            echo "yarn --version = $(yarn --version)"

      - restore_cache:
          key: node_modules-{{checksum "./package.json"}}-v4
      - run:
          name: "Install dependencies"
          command: |
            echo "# Top level package"
            npm i --unsafe-perm
      - save_cache:
          key: node_modules-{{checksum "./package.json"}}-v4
          paths:
            - "./node_modules"

      - run:
          name: "Build preview"
          command: npm run build-storybook --unsafe-perm
      - run:
          name: "Push preview to the cloud"
          command: |
            echo "* Copying to S3..."
            aws s3 sync storybook-static/ s3://ui-preview.density.rodeo/${CIRCLE_SHA1} --region us-east-1
      - run:
          name: "Post preview link to any pull requests commit is part of"
          command: |
            echo "* Posting status to commit ${CIRCLE_SHA1}"
            curl -X POST \
            -d "{\"state\":\"success\", \"context\": \"ci-preview\", \"target_url\": \"https://ui-preview.density.rodeo/${CIRCLE_SHA1}\"}" \
            -H "Authorization: Bearer $GITHUB_MACHINE_USER_TOKEN" \
            https://api.github.com/repos/densityco/ui/statuses/${CIRCLE_SHA1}

  build:
    docker:
      - image: 937369328181.dkr.ecr.us-east-1.amazonaws.com/density/baseimage-node-12:trunk
    resource_class: small
    steps:
      - checkout
      - run:
          name: "Print out versions"
          command: |
            echo "node -v = $(node -v)"
            echo "npm -v = $(npm -v)"
            echo "yarn --version = $(yarn --version)"

      - restore_cache:
          key: node_modules-{{checksum "./package.json"}}-v4
      - run:
          name: "Install dependencies"
          command: |
            echo "# Top level package"
            npm i --unsafe-perm
      - save_cache:
          key: node_modules-{{checksum "./package.json"}}-v4
          paths:
            - "./node_modules"

      - run:
          name: "Build density ui storybook"
          command: npm run build-storybook --unsafe-perm
      - run:
          name: "Push preview to the cloud"
          command: |
            echo "* Copying to S3..."
            aws s3 sync storybook-static/ s3://ui-preview.density.rodeo --region us-east-1

  publish:
    docker:
      - image: 937369328181.dkr.ecr.us-east-1.amazonaws.com/density/baseimage-node-12:trunk
    resource_class: small
    steps:
      - checkout
      - restore_cache:
          key: node_modules-{{checksum "./package.json"}}
      - run:
          name: "Install dependencies"
          command: |
            echo "# Top level package"
            npm i --unsafe-perm
      - run:
          name: "Add npm token to npmrc"
          command: echo "//registry.npmjs.org/:_authToken=${NPM_TOKEN}" >> ~/.npmrc
      - run:
          name: "Publish to npm registry"
          command: |
            # If the version has more than just xx.xx.xx, then it's a non-official release
            tag="next"
            if jq -r .version ./package.json | grep '^[0-9]\+.[0-9]\+.[0-9]\+$'; then
              tag="latest"
            fi

            echo "Publishing $(jq -r .version ./package.json) to tag ${tag}"

            set +e # This permits the publish to fail if the version is the same as the previous commit
            npm publish --tag ${tag} --unsafe-perm
            set -e

workflows:
  version: 2
  npm-deployment:
    jobs:
      # For all pushes, build/deploy to `https://ui-preview.density.rodeo/SHA`
      - preview:
          context:
            - circleci-aws-creds

      # Trunk is published to npm
      - publish:
          context:
            - circleci-aws-creds
          filters:
            branches:
              only: trunk

      # Trunk is also built and deployed to https://ui-preview.density.rodeo
      - build:
          context:
            - circleci-aws-creds
          filters:
            branches:
              only: trunk
